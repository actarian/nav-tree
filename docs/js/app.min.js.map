{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","app","directive","$parse","restrict","templateUrl","scope","items","link","element","attributes","model","getHref","item","url","onLink","add","parent","$nav","level","href","onNav","obj","push","parse","forEach","$parent","nav","$watch","$timeout","itemOpen","immediate","state","active","closed","closing","opening","opened","itemClose","o","itemToggle","onTap","e","trigger","output","promise","then","resolved","rejected","onTouchStart","navItem","off","onMouseDown","onClick","prevent","preventDefault","removeListeners","querySelector","on","$on","controller","$scope","$q","$http","console","log","onNavPromise","$promise","title","resolve","callback","deferred","defer","get","response","data","error"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.config(['$httpProvider', function($httpProvider) {\n        // $httpProvider.defaults.withCredentials = true;\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.config(['$locationProvider', function($locationProvider) {\n\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\n        $locationProvider.html5Mode(false);\n        $locationProvider.hashPrefix('');\n\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.run(['$rootScope', function($rootScope) {\n\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.directive('navTree', ['$parse', function($parse) {\n        return {\n            restrict: 'A',\n            templateUrl: 'partials/nav-tree/nav-tree',\n            scope: {\n                items: '=navTree',\n            },\n            link: function(scope, element, attributes, model) {\n                var onLink = $parse(attributes.onLink)(scope.$parent);\n                var onNav = $parse(attributes.onNav)(scope.$parent);\n\n                var nav = {\n                    level: 0,\n                };\n\n                var item = {\n                    items: [],\n                    $nav: nav,\n                };\n\n                function getHref(item) {\n                    var url = item.url;\n                    if (onLink) {\n                        url = onLink(item);\n                    }\n                    url = url || '#';\n                    return url;\n                }\n\n                function add(item, parent) {\n                    item.$nav = {\n                        parent: parent,\n                        level: parent.$nav.level + 1,\n                        href: getHref(item),\n                        onNav: onNav,\n                        add: function(obj) {\n                            add(obj, item);\n                            item.items.push(obj);\n                        },\n                    };\n                }\n\n                function parse(items, parent) {\n                    if (items) {\n                        angular.forEach(items, function(item) {\n                            add(item, parent);\n                            parse(item.items, item);\n                        });\n                    }\n                }\n\n                scope.$watch('items', function(items) {\n                    if (items) {\n                        item.items = items;\n                        parse(item.items, item);\n                    }\n                });\n\n                scope.item = item;\n\n            }\n        };\n    }]);\n\n    app.directive('navTreeItem', ['$timeout', function($timeout) {\n        return {\n            restrict: 'A',\n            templateUrl: 'partials/nav-tree/nav-tree-item',\n            scope: {\n                item: '=navTreeItem',\n            },\n            link: function(scope, element, attributes, model) {\n                var navItem = angular.element(element[0].querySelector('.nav-link'));\n                var state = {};\n                scope.item.$nav.state = state;\n\n                var output;\n\n                function itemOpen(item, immediate) {\n                    var state = item.$nav.state;\n                    state.active = true;\n\n                    $timeout(function() {\n                        state.immediate = immediate;\n                        state.closed = state.closing = false;\n                        state.opening = true;\n                        $timeout(function() {\n                            state.opening = false;\n                            state.opened = true;\n                        });\n                    });\n                }\n\n                function itemClose(item, immediate) {\n                    var state = item.$nav.state;\n                    state.active = false;\n                    $timeout(function() {\n                        state.immediate = immediate;\n                        state.opened = state.opening = false;\n                        state.closing = true;\n                        $timeout(function() {\n                            state.closing = false;\n                            state.closed = true;\n                        });\n                    });\n                    if (item.items) {\n                        angular.forEach(item.items, function(o) {\n                            itemClose(o, true);\n                        });\n                    }\n                }\n\n                function itemToggle(item) {\n                    var state = item.$nav.state;\n                    state.active = item.items ? !state.active : true;\n                    if (state.active) {\n                        if (item.$nav.parent) {\n                            angular.forEach(item.$nav.parent.items, function(o) {\n                                if (o !== item) {\n                                    itemClose(o, true);\n                                }\n                            });\n                        }\n                        itemOpen(item);\n                    } else {\n                        itemClose(item);\n                    }\n                    // console.log(state);\n                }\n\n                function onTap(e) {\n                    // console.log('treeItem.onTap');\n                    var item = scope.item;\n                    var state = item.$nav.state;\n                    if (state.active) {\n                        output = false;\n                        trigger();\n                    } else if (item.$nav.onNav) {\n                        var promise = item.$nav.onNav(item);\n                        if (promise && typeof promise.then === 'function') {\n                            promise.then(function(resolved) {\n                                // go on\n                                trigger();\n                            }, function(rejected) {\n                                // do nothing\n                            });\n                            output = false;\n                        } else {\n                            output = promise;\n                            trigger();\n                        }\n                    }\n\n                    function trigger() {\n                        $timeout(function() {\n                            itemToggle(item);\n                        });\n                    }\n                }\n\n                function onTouchStart(e) {\n                    // console.log('treeItem.onTouchStart', e);\n                    onTap(e);\n                    navItem\n                        .off('mousedown', onMouseDown);\n                    // return r || prevent(e);\n                }\n\n                function onMouseDown(e) {\n                    // console.log('treeItem.onMouseDown', e);\n                    onTap(e);\n                    navItem\n                        .off('touchstart', onTouchStart);\n                    // return r || prevent(e);\n                }\n\n                function onClick(e) {\n                    // console.log('treeItem.onClick', e);\n                    return prevent(e);\n                }\n\n                function prevent(e) {\n                    if (output === false) {\n                        // console.log('treeItem.prevent', e);\n                        e.preventDefault();\n                        // e.stopPropagation();\n                        return false;\n                    }\n                }\n\n                function addListeners() {\n                    navItem\n                        .on('touchstart', onTouchStart)\n                        .on('mousedown', onMouseDown)\n                        .on('click', onClick);\n                }\n\n                function removeListeners() {\n                    navItem\n                        .off('touchstart', onTouchStart)\n                        .off('mousedown', onMouseDown)\n                        .off('click', onClick);\n                }\n\n                addListeners();\n\n                scope.$on('$destroy', function() {\n                    removeListeners();\n                });\n\n            }\n        };\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.controller('RootCtrl', ['$scope', '$q', '$http', '$timeout', function($scope, $q, $http, $timeout) {\n\n        $http.get('https://supahfunk.github.io/rossini/json/menu-rossini.js').then(function(response) {\n            $scope.items = response.data;\n\n        }, function(error) {\n            console.log('RootCtrl.error', error);\n        });\n\n        function onLink(item) {\n            var url = item.url;\n            url = url ? '#' + url : '#';\n            /*\n            if (item.years) {\n                var key = String(item.years.to ? item.years.from + '-' + item.years.to : item.years.from); // da riattivare !!!\n                url = '/years/' + key;\n            }\n            */\n            console.log('RootCtrl.onLink', url);\n            return url;\n        }\n\n        function onNav(item) {\n            console.log('RootCtrl.onNav', item, item.$nav.level);\n            return false; // disable default link behaviour;\n        }\n\n        function onNavPromise(item) {\n            return $promise(function(promise) {\n                console.log('RootCtrl.onNavPromise', item, item.$nav.level);\n                $timeout(function() {\n                    if (item.items) {\n                        item.$nav.add({\n                            title: \"Azz\",\n                        });\n                    }\n                    promise.resolve();\n                });\n            }); // a promise always disable default link behaviour;\n        }\n\n        $scope.onLink = onLink;\n        $scope.onNav = onNavPromise;\n\n        function $promise(callback) {\n            if (typeof callback !== 'function') {\n                throw ('promise resolve callback missing');\n            }\n            var deferred = $q.defer();\n            callback(deferred);\n            return deferred.promise;\n        }\n\n    }]);\n\n}());"]}